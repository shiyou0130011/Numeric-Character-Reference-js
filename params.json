{
  "name": "Numeric-character-reference-js",
  "tagline": "",
  "body": "# Numeric Character Reference js  [![Apache 2.0 License](https://img.shields.io/badge/listence-apache%202.0-%23CB2533.svg)](http://www.apache.org/licenses/LICENSE-2.0)\r\nThis is a javascript ([typescript](https://www.typescriptlang.org/)) project used for conversion between “Numeric Character Reference” (HTML Entity) and the char.\r\n\r\n## Compile\r\nThis project is written by [typescript](https://www.typescriptlang.org/).\r\n\r\nPlease install typescript first:\r\n\r\n\tnpm install -g typescript\r\n\t\r\n\r\nThen compile it\r\n\t\r\n\tcd /path/of/the/source/code\r\n\ttsc\r\n\r\nThe output javascript code will in the folder */path/of/the/source/code/***out**\r\n\r\n## Example\r\n\r\n### Parsing  English\t\r\n\tNCR.encode(\"Hello World\")\t// will return (\"Hello World\")\r\n\t\r\n\tNCR.decode(\"Hello World\")\t// will return (\"Hello World\")\r\n\r\n### Parsing Chinese\r\n\tNCR.encode(\"你好，世界\")\t// will return \"&#20320;&#22909;&#65292;&#19990;&#30028;\"\r\n\t\r\n\tNCR.decode(\"&#20320;&#22909;&#65292;&#19990;&#30028;\")\t// will return \"你好，世界\"\r\n\r\n### String width Emoji\r\n\tNCR.encode(\"This is a penguin: \\uD83D\\uDC27\")     \t// will return \"This is a penguin: &#128039;\"\r\n\tNCR.encode(\"This is a penguin: \\uD83D\\uDC27\", true)\t// will return \"This is a penguin: &#x1f427;\"\r\n\t\r\n\tNCR.decode(\"This is a penguin: &#x1f427;\")        \t// Using HTML Entity (Hexadecimal). It will return \"This is a penguin: \\uD83D\\uDC27\"\r\n\t\r\n\tNCR.decode(\"This is a penguin: &#128039;\")        \t// Using HTML Entity (Decimal). It will return \"This is a penguin: \\uD83D\\uDC27\", too.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}